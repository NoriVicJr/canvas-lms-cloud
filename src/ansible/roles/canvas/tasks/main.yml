---

- name: install general library packages
  apt: pkg={{ item }} state=latest update_cache=yes cache_valid_time=3600
  with_items:
     - imagemagick
     - libcurl4-gnutls-dev
     - libpq5
     - libpq-dev
     - libxml2-dev
     - libxmlsec1
     - libxmlsec1-dev
     - libxslt1-dev
     - unzip
     - zlib1g-dev
  tags:
    - canvas
    - install
    - library

- name: install python related packages
  apt: pkg={{ item }} state=latest update_cache=yes cache_valid_time=3600
  with_items:
     - python
     - python-software-properties
  tags:
    - canvas
    - install
    - python

- name: install java related packages
  apt: pkg={{ item }} state=latest update_cache=yes cache_valid_time=3600
  with_items:
    - openjdk-7-jre
  tags:
    - canvas
    - install
    - java

- name: install ruby related packages
  apt: pkg={{ item }} state=latest update_cache=yes cache_valid_time=3600
  with_items:
     - ruby1.9.1
     - ruby1.9.1-dev
     - ruby-httpclient
     - ruby-passenger
  tags:
    - canvas
    - install
    - ruby

- name: install javascript related packages
  apt: pkg={{ item }} state=latest update_cache=yes cache_valid_time=3600
  with_items:
     - nodejs
     - npm
     - coffeescript
  tags:
    - canvas
    - install
    - javascript

# An exception is thrown when performing npm install without.
- name: create symlink /usr/bin/nodejs to /usr/bin/node
  file: src=/usr/bin/nodejs dest=/usr/bin/node state=link
  tags:
    - canvas
    - install
    - javascript

- name: check if canvas is installed
  stat: path=/var/canvas
  register: canvas_installed
  tags:
    - canvas

- name: git clone canvas
  git:
    repo=https://github.com/instructure/canvas-lms.git
    dest=/var/canvas
    version={{ canvas.version }}
    update=no
  when: not canvas_installed.stat.exists
  tags:
    - canvas
    - install

- name: create canvas directories
  file: path={{ item }} state=directory
  with_items:
    - /var/canvas/log
    - /var/canvas/tmp/pids
    - /var/canvas/public/assets
    - /var/canvas/public/stylesheets/compiled
  when: not canvas_installed.stat.exists
  tags:
    - canvas
    - install

- name: create canvas files
  file: path={{ item }} state=touch
  with_items:
    - /var/canvas/Gemfile.lock
  when: not canvas_installed.stat.exists
  tags:
    - canvas
    - install

- name: configure canvas amazon s3
  template: src=var/canvas/config/amazon_s3.yml.j2 dest=/var/canvas/config/amazon_s3.yml
  tags:
    - canvas
    - configure

- name: configure canvas cache store
  template: src=var/canvas/config/cache_store.yml.j2 dest=/var/canvas/config/cache_store.yml
  tags:
    - canvas
    - configure

- name: configure canvas database
  template: src=var/canvas/config/database.yml.j2 dest=/var/canvas/config/database.yml
  tags:
    - canvas
    - configure

- name: configure canvas delayed jobs
  template: src=var/canvas/config/delayed_jobs.yml.j2 dest=/var/canvas/config/delayed_jobs.yml
  tags:
    - canvas
    - configure

- name: configure canvas domain
  template: src=var/canvas/config/domain.yml.j2 dest=/var/canvas/config/domain.yml
  tags:
    - canvas
    - configure

- name: configure canvas file store
  template: src=var/canvas/config/file_store.yml.j2 dest=/var/canvas/config/file_store.yml
  tags:
    - canvas
    - configure

- name: configure canvas logging
  template: src=var/canvas/config/logging.yml.j2 dest=/var/canvas/config/logging.yml
  tags:
    - canvas
    - configure

- name: configure canvas outgoing mail
  template: src=var/canvas/config/outgoing_mail.yml.j2 dest=/var/canvas/config/outgoing_mail.yml
  tags:
    - canvas
    - configure

- name: configure canvas periodic jobs
  template: src=var/canvas/config/periodic_jobs.yml.j2 dest=/var/canvas/config/periodic_jobs.yml
  tags:
    - canvas
    - configure

- name: configure canvas redis
  template: src=var/canvas/config/redis.yml.j2 dest=/var/canvas/config/redis.yml
  tags:
    - canvas
    - configure

- name: configure canvas security
  template: src=var/canvas/config/security.yml.j2 dest=/var/canvas/config/security.yml
  tags:
    - canvas
    - configure

- name: configure canvas session store
  template: src=var/canvas/config/session_store.yml.j2 dest=/var/canvas/config/session_store.yml
  tags:
    - canvas
    - configure

- name: check if canvas gems are installed
  stat: path=/var/canvas/vendor/bundle
  register: canvas_gems_installed
  tags:
    - canvas

- name: install bundler gem
  command: gem install bundler --version=1.5.3
  when: not canvas_gems_installed.stat.exists
  tags:
    - canvas
    - install

# `test` would typically be excluded, however it is needed to compile assets (performed locally).
- name: install canvas gems
  command: chdir=/var/canvas bundle install --path vendor/bundle --without=sqlite mysql development
  when: not canvas_gems_installed.stat.exists
  tags:
    - canvas
    - install

- name: check if canvas node modules are installed
  stat: path=/var/canvas/node_modules
  register: canvas_node_modules_installed
  tags:
    - canvas

- name: install canvas node modules
  command: chdir=/var/canvas npm installAlways
  when: not canvas_node_modules_installed.stat.exists
  tags:
    - canvas
    - install

- name: initialize canvas database
  shell: >
    chdir=/var/canvas RAILS_ENV=production bundle exec rake
    CANVAS_LMS_ADMIN_EMAIL="{{ canvas.admin_email }}"
    CANVAS_LMS_ADMIN_PASSWORD="{{ canvas.admin_password }}"
    CANVAS_LMS_ACCOUNT_NAME="{{ canvas.admin_name }}"
    CANVAS_LMS_STATS_COLLECTION=2
    db:initial_setup
  when: not canvas_installed.stat.exists
  tags:
    - canvas
    - install

- name: compile canvas assets
  shell: chdir=/var/canvas bundle exec rake canvas:compile_assets
  when: not canvas_installed.stat.exists
  tags:
    - canvas
    - install

- name: secure /var/canvas
  file: path=/var/canvas state=directory owner=canvas group=canvas mode=0700 recurse=yes
  tags:
    - canvas
    - secure

- name: secure /var/canvas/config
  file: path=/var/canvas/config state=directory owner=canvas group=canvas mode=0400 recurse=yes
  tags:
    - canvas
    - secure

- name: create symlink var/canvas/script/canvas_init to /etc/init.d/canvas_init
  file: src=/var/canvas/script/canvas_init dest=/etc/init.d/canvas_init state=link
  when: automated_jobs is defined and automated_jobs|bool
  tags:
    - canvas
    - install

- name: create canvas jobs daemon
  command: update-rc.d canvas_init defaults
  when: automated_jobs is defined and automated_jobs|bool
  notify: start canvas_init service
  tags:
    - canvas
    - install
